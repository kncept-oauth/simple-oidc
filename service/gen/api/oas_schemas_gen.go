// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"io"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AuthorizeGetBadRequestApplicationJSON string

func (*AuthorizeGetBadRequestApplicationJSON) authorizeGetRes() {}

// AuthorizeGetFound is response for AuthorizeGet operation.
type AuthorizeGetFound struct {
	Location string
}

// GetLocation returns the value of Location.
func (s *AuthorizeGetFound) GetLocation() string {
	return s.Location
}

// SetLocation sets the value of Location.
func (s *AuthorizeGetFound) SetLocation(val string) {
	s.Location = val
}

func (*AuthorizeGetFound) authorizeGetRes() {}

type AuthorizeGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AuthorizeGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*AuthorizeGetOK) authorizeGetRes() {}

// ErrRespStatusCode wraps string with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   string
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() string {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val string) {
	s.Response = val
}

// Ref: #/components/schemas/JWKResponse
type JWKResponse struct {
	Kty    OptString `json:"kty"`
	Use    OptString `json:"use"`
	KeyOps OptString `json:"key_ops"`
	Alg    OptString `json:"alg"`
	Kid    OptString `json:"kid"`
	X5u    OptString `json:"x5u"`
	X5c    OptString `json:"x5c"`
	X5t    OptString `json:"x5t"`
	N      OptString `json:"n"`
	E      OptString `json:"e"`
}

// GetKty returns the value of Kty.
func (s *JWKResponse) GetKty() OptString {
	return s.Kty
}

// GetUse returns the value of Use.
func (s *JWKResponse) GetUse() OptString {
	return s.Use
}

// GetKeyOps returns the value of KeyOps.
func (s *JWKResponse) GetKeyOps() OptString {
	return s.KeyOps
}

// GetAlg returns the value of Alg.
func (s *JWKResponse) GetAlg() OptString {
	return s.Alg
}

// GetKid returns the value of Kid.
func (s *JWKResponse) GetKid() OptString {
	return s.Kid
}

// GetX5u returns the value of X5u.
func (s *JWKResponse) GetX5u() OptString {
	return s.X5u
}

// GetX5c returns the value of X5c.
func (s *JWKResponse) GetX5c() OptString {
	return s.X5c
}

// GetX5t returns the value of X5t.
func (s *JWKResponse) GetX5t() OptString {
	return s.X5t
}

// GetN returns the value of N.
func (s *JWKResponse) GetN() OptString {
	return s.N
}

// GetE returns the value of E.
func (s *JWKResponse) GetE() OptString {
	return s.E
}

// SetKty sets the value of Kty.
func (s *JWKResponse) SetKty(val OptString) {
	s.Kty = val
}

// SetUse sets the value of Use.
func (s *JWKResponse) SetUse(val OptString) {
	s.Use = val
}

// SetKeyOps sets the value of KeyOps.
func (s *JWKResponse) SetKeyOps(val OptString) {
	s.KeyOps = val
}

// SetAlg sets the value of Alg.
func (s *JWKResponse) SetAlg(val OptString) {
	s.Alg = val
}

// SetKid sets the value of Kid.
func (s *JWKResponse) SetKid(val OptString) {
	s.Kid = val
}

// SetX5u sets the value of X5u.
func (s *JWKResponse) SetX5u(val OptString) {
	s.X5u = val
}

// SetX5c sets the value of X5c.
func (s *JWKResponse) SetX5c(val OptString) {
	s.X5c = val
}

// SetX5t sets the value of X5t.
func (s *JWKResponse) SetX5t(val OptString) {
	s.X5t = val
}

// SetN sets the value of N.
func (s *JWKResponse) SetN(val OptString) {
	s.N = val
}

// SetE sets the value of E.
func (s *JWKResponse) SetE(val OptString) {
	s.E = val
}

// Ref: #/components/schemas/JWKSetResponse
type JWKSetResponse struct {
	Keys []JWKResponse `json:"keys"`
}

// GetKeys returns the value of Keys.
func (s *JWKSetResponse) GetKeys() []JWKResponse {
	return s.Keys
}

// SetKeys sets the value of Keys.
func (s *JWKSetResponse) SetKeys(val []JWKResponse) {
	s.Keys = val
}

type LoginCookie struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *LoginCookie) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *LoginCookie) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/LoginTokens
type LoginTokens struct {
	AccessToken  string  `json:"access_token"`
	TokenType    string  `json:"token_type"`
	ExpiresIn    float64 `json:"expires_in"`
	IDToken      string  `json:"id_token"`
	RefreshToken string  `json:"refresh_token"`
}

// GetAccessToken returns the value of AccessToken.
func (s *LoginTokens) GetAccessToken() string {
	return s.AccessToken
}

// GetTokenType returns the value of TokenType.
func (s *LoginTokens) GetTokenType() string {
	return s.TokenType
}

// GetExpiresIn returns the value of ExpiresIn.
func (s *LoginTokens) GetExpiresIn() float64 {
	return s.ExpiresIn
}

// GetIDToken returns the value of IDToken.
func (s *LoginTokens) GetIDToken() string {
	return s.IDToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *LoginTokens) GetRefreshToken() string {
	return s.RefreshToken
}

// SetAccessToken sets the value of AccessToken.
func (s *LoginTokens) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetTokenType sets the value of TokenType.
func (s *LoginTokens) SetTokenType(val string) {
	s.TokenType = val
}

// SetExpiresIn sets the value of ExpiresIn.
func (s *LoginTokens) SetExpiresIn(val float64) {
	s.ExpiresIn = val
}

// SetIDToken sets the value of IDToken.
func (s *LoginTokens) SetIDToken(val string) {
	s.IDToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *LoginTokens) SetRefreshToken(val string) {
	s.RefreshToken = val
}

func (*LoginTokens) tokenPostRes() {}

// Ref: #/components/schemas/OpenIDProviderMetadataResponse
type OpenIDProviderMetadataResponse struct {
	Issuer                string `json:"issuer"`
	AuthorizationEndpoint string `json:"authorization_endpoint"`
	TokenEndpoint         string `json:"token_endpoint"`
	JwksURI               string `json:"jwks_uri"`
}

// GetIssuer returns the value of Issuer.
func (s *OpenIDProviderMetadataResponse) GetIssuer() string {
	return s.Issuer
}

// GetAuthorizationEndpoint returns the value of AuthorizationEndpoint.
func (s *OpenIDProviderMetadataResponse) GetAuthorizationEndpoint() string {
	return s.AuthorizationEndpoint
}

// GetTokenEndpoint returns the value of TokenEndpoint.
func (s *OpenIDProviderMetadataResponse) GetTokenEndpoint() string {
	return s.TokenEndpoint
}

// GetJwksURI returns the value of JwksURI.
func (s *OpenIDProviderMetadataResponse) GetJwksURI() string {
	return s.JwksURI
}

// SetIssuer sets the value of Issuer.
func (s *OpenIDProviderMetadataResponse) SetIssuer(val string) {
	s.Issuer = val
}

// SetAuthorizationEndpoint sets the value of AuthorizationEndpoint.
func (s *OpenIDProviderMetadataResponse) SetAuthorizationEndpoint(val string) {
	s.AuthorizationEndpoint = val
}

// SetTokenEndpoint sets the value of TokenEndpoint.
func (s *OpenIDProviderMetadataResponse) SetTokenEndpoint(val string) {
	s.TokenEndpoint = val
}

// SetJwksURI sets the value of JwksURI.
func (s *OpenIDProviderMetadataResponse) SetJwksURI(val string) {
	s.JwksURI = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type TokenPostBadRequestApplicationJSON string

func (*TokenPostBadRequestApplicationJSON) tokenPostRes() {}
